@using AlfasiWeb.Helpers
<div id="group_table" class="login_bk">
    @{
        ViewBag.Title = "Mark List";
    }
    @Html.Message()
    <div class="content-bk">
        <div id="form_head">
            <h3>File Upload</h3>
        </div>
        <br />

        <div class="container-fluid">
            <div class="row-fluid">
                <div class="Uploader">
                    <div class="Contaier-upload">
                        <div class="head_upload">
                            <div class="headings">
                                <h4 class="pull-left">
                                    File Uploader</h4>
                                <h6 class="pull-right">
                                    Drag and drop files here</h6>
                            </div>
                        </div>

                        <table class="table">
                            <tbody class="table_head">
                                <tr>
                                    <td class="span10">
                                        FileName
                                    </td>
                                    <td class="span2 ">
                                        <span>Size</span>
                                    </td>
                                    <td class="span2 ">
                                        <span>Status</span>
                                    </td>
                                    <td class="span1 ">
                                    </td>
                                </tr>
                            </tbody>
                        </table>

                        <div id="dragandrophandler" >
                            <table id="uploadfilelist" class="table">
                                <tbody class="content_area">

                                </tbody>
                            </table>
                        </div>

                        <div class="upload_filelist_footer">
                            <div class="upload_file_foooter_list">
                                <div class="Buton_area">
                                        
                                    <input type="file" accept="image/*" name="fileNonIEUpload" id="fileNonIEUpload" style='visibility: hidden;' onchange="fileSelected();"/>
                                    <input type = "button" value = "Select File" onclick ="javascript:document.getElementById('fileNonIEUpload').click();"/>

                                    <button class="btn btn-small" type="button" id="buttonUpload" onclick="uploadFiles();">
                                        <i class="icon-upload" ></i>Upload</button>
                                </div>
                            </div>
                        </div>
                        
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    var filequeue = new Array();
    var count = 0;
    var uploadedFilePath;

    $(document).ready(function() {

        var processingfileuniquekey;
        var obj = $("#dragandrophandler");

        obj.on('dragenter', function(e) {
            e.stopPropagation();
            e.preventDefault();
        });
        obj.on('dragover', function(e) {
            e.stopPropagation();
            e.preventDefault();
        });
        obj.on('drop', function(e) {

            e.preventDefault();
            var files = e.originalEvent.dataTransfer.files;
            fileProgressDisplay(files);

        });
        $(document).on('dragenter', function (e) {
            e.stopPropagation();
            e.preventDefault();
        });
        $(document).on('dragover', function (e) {
            e.stopPropagation();
            e.preventDefault();
        });
        $(document).on('drop', function (e) {
            e.stopPropagation();
            e.preventDefault();
        });

    });

    function fileProgressDisplay(processingfiles) {

        var processingfileuniquekey = "F00" + count + "_";
        var processingfile = processingfiles[0];

        var tr = document.createElement("tr");

        var tdFileName = document.createElement("td");
        tdFileName.setAttribute("class", "span11");
        tdFileName.innerHTML = processingfileuniquekey + processingfile.name;
        tr.appendChild(tdFileName);

        var tdFileSize = document.createElement("td");
        tdFileSize.setAttribute("class", "span2");
        tdFileSize.innerHTML = processingfile.size;
        tr.appendChild(tdFileSize);

        var tdFileProgress = document.createElement("td");
        tdFileProgress.setAttribute("class", "span2");
        tdFileProgress.innerHTML = "0%";
        tr.appendChild(tdFileProgress);

        var tdFileRemove = document.createElement("td");
        tdFileRemove.setAttribute("class", "span1");
        var removeImg = document.createElement("img");
        removeImg.setAttribute("src", '@Url.Content("~/Content/fileupload/file-remove.png")');
        removeImg.setAttribute("onclick", "removeFile('" + processingfileuniquekey + "');");
        removeImg.setAttribute("height", "24");
        removeImg.setAttribute("width", "24");
        tdFileRemove.appendChild(removeImg);
        tr.appendChild(tdFileRemove);

        $("#uploadfilelist tbody").append(tr);

        var map = new Array(processingfile, processingfileuniquekey);
        filequeue.push({ file: map, tr: tr });

        count = count + 1;
    }

    function fileTypeValidate(file, fileType) {

        var theFileType = null;
        var array = file.name.split('.');
        if (array.length > 1) {
            theFileType = array[1];
        }

        if (theFileType.match(fileType)) {
            return true;
        }
        return false;
    }

    function fileSelected() {

        try {

            var files = document.getElementById('fileNonIEUpload').files;
            fileProgressDisplay(files);

            $("#fileToUpload").val("");

        } catch (err) {
            alert("FileSelected Exception " + err);
        }
    }

    function removeFile(processingfileuniquekey) {

        try {

            $("#uploadfilelist tr").each(function () {

                if ($(this).find("td").eq(0).text().indexOf(processingfileuniquekey) != -1) {

                    var containtext = $(this).find("td").eq(0).text();

                    $(this).remove();

                    for (var b = 0; b < filequeue.length; b++) {

                        var processarray = filequeue[b];
                        var processmap = processarray.file;

                        if (containtext.indexOf(processmap[1]) != -1) {

                            filequeue.splice(b, 1);

                            break;
                        }
                    }

                }


            });


        } catch (err) {
            alert("RemoveFile Exception " + err);
        }
    }

    function uploadFiles() {

        try {


            if (filequeue != null && filequeue.length != 0) {

                while (filequeue.length > 0) {

                    var item = filequeue.pop();
                    var processarray = item.file;
                    var file = processarray[0];
                    var key = processarray[1];

                    upload(file, key, item);

                }
            }

        } catch (err) {
            alert("UploadFiles Exception " + err);
        }

    }

    function GUID() {
        var S4 = function () {
            return Math.floor(
                Math.random() * 0x10000 /* 65536 */
            ).toString(16);
        };

        return (
            S4() + S4() + "-" +
                S4() + "-" +
                    S4() + "-" +
                        S4() + "-" +
                            S4() + S4() + S4()
        );
    }

    function upload(file, key, item) {

        try {

            var uploadurl = '@Url.Action("UploadNonMsieFiles", "Base")';
            uploadurl += "?bustCache=" + GUID();

            var tr = item.tr;
            var statusTd = $(tr).find('td').eq(2);

            var xhr = new XMLHttpRequest(), upload = xhr.upload;

            upload.addEventListener("loadstart", function (ev) {


            }, false);

            upload.addEventListener("progress", function (ev) {

                if (ev.lengthComputable) {

                    var percentComplete = Math.round(ev.loaded * 100 / ev.total);
                    statusTd.text(percentComplete + "%");
                    statusTd.css("color", "#3DD13F");
                }

            }, false);
            upload.addEventListener("load", function (evt) {

                statusTd.css("color", "#3DD13F");

            }, false);
            upload.addEventListener("error", function (ev) {

                if (xhr.status != 500) {

                    filequeue.push(item);

                    var containtext = statusTd.text();
                    statusTd.text(containtext + " upload error");
                    statusTd.css("color", "#FF0000");

                }

            }, false);

            xhr.open("POST", uploadurl);

            xhr.setRequestHeader("Content-type", "multipart/form-data");
            xhr.setRequestHeader("X-File-Name", (key + file.name));
            xhr.setRequestHeader("Cache-Control", "no-cache");
            xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest");
            xhr.setRequestHeader("X-File-Size", file.size);
            xhr.setRequestHeader("X-File-Type", file.type);


            xhr.send(file);

            xhr.onreadystatechange = function () {

                if (xhr.readyState != 4) {
                    return;
                } else if (xhr.readyState == 4) {

                    if (xhr.status == 500) {

                        var resp = JSON.parse(xhr.responseText);

                    } else if (xhr.status == 200) {
                        var jsonResponse = JSON.parse(xhr.responseText);
                        uploadedFilePath = jsonResponse;
                        $("#buttonSave").prop('disabled', false);
                        $(tr).fadeOut(5000);
                    }


                }

            };
        } catch (err) {
            alert("Upload Exception " + err);
        }
    }
    
</script>
