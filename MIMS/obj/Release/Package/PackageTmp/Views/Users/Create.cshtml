@using AlfasiWeb
@using AlfasiWeb.Util
@using Dinota.Security
@using MvcContrib.UI.Pager
@model AlfasiWeb.Models.RegisterModel
@using AlfasiWeb.Helpers
@{
    TempData.Keep(ViewDataKeys.UserTypeEnum);
    string userTitle = null;
    var userTypeEnum = (byte)TempData[ViewDataKeys.UserTypeEnum];
    switch (userTypeEnum)
    {
        case 1:
            userTitle = "User";
            break;
        case 2:
            userTitle = "Project Manager";
            break;
        case 3:
            userTitle = "Supplier";
            break;
        case 4:
            userTitle = "Fabricator";
            break;
        case 5:
            userTitle = "Transporter";
            break;
        case 6:
            userTitle = "Erector";
            break;
    }

    var attribs = new Dictionary<string, object> { { "class", "input-xlarge" } };

}
<div id="group_table" class="login_bk">
    <div class="content-bk">
        <h3 id="form_head">
            New @userTitle</h3>
        @using (Html.BeginForm())
        {
            @Html.ValidationSummary(true)
            <br />
            <div class="row-fluid">
                <div class="control-group">
                    @Html.Custom().LabelFor(model => model.UserName)
                    @Html.Custom().TextBoxFor(model => model.UserName, attribs)
                    <span class="help-inline">@Html.ValidationMessageFor(model => model.UserName)</span>
                    <div class="clear">
                    </div>
                </div>
            </div>
            <div class="row-fluid">
                <div class="control-group">
                    @Html.Custom().LabelFor(model => model.Name)
                    @Html.Custom().TextBoxFor(model => model.Name, attribs)
                    @Html.ValidationMessageFor(model => model.Name)
                    <div class="clear">
                    </div>
                </div>
            </div>
            <div class="row-fluid">
                <div class="control-group">
                    @Html.Custom().LabelFor(model => model.Telephone1)
                    @Html.Custom().TextBoxFor(model => model.Telephone1, attribs)
                    @Html.ValidationMessageFor(model => model.Telephone1)
                    <div class="clear">
                    </div>
                </div>
            </div>
            <div class="row-fluid">
                <div class="control-group">
                    @Html.Custom().LabelFor(model => model.Email)
                    @Html.Custom().TextBoxFor(model => model.Email, attribs)
                    @Html.ValidationMessageFor(model => model.Email)
                    <div class="clear">
                    </div>
                </div>
            </div>
            if (userTypeEnum == 3)
            {
            <div class="row-fluid">
                <div class="control-group">
                    @Html.Custom().LabelFor(model => model.IsFabUser)
                    <div class="controls">
                        <input type="checkbox" name="IsFabUser" id="IsFabUser" value="true" />
                        <input type="hidden" name="IsFabUser" value="false" />
                    </div>
                    <div class="clear">
                    </div>
                </div>
            </div>
            }
            <div class="row-fluid">
                <div class="control-group">
                    @Html.Custom().LabelFor(model => model.Password)
                    @Html.Custom().PasswordFor(model => model.Password)
                    @Html.ValidationMessageFor(model => model.Password)
                    <div class="clear">
                    </div>
                </div>
            </div>
            <div class="row-fluid">
                <div class="control-group">
                    @Html.Custom().LabelFor(model => model.ConfirmPassword)
                    @Html.Custom().PasswordFor(model => model.ConfirmPassword)
                    @Html.ValidationMessageFor(model => model.ConfirmPassword)
                    <div class="clear">
                    </div>
                </div>
            </div>
            <div class="control-group">
                <label for="button1id" class="control-label">
                    &nbsp;</label>
                <div class="controls">
                    <button id="button1id" name="button1id" type="submit" class="btn btn-primary" value="Create">
                        Create</button>
                    @Ajax.ActionLink("Back to List", "LoadUserList", "users", new { typeenum = (byte)TempData[ViewDataKeys.UserTypeEnum] }, new AjaxOptions() { OnFailure = "serverError();", UpdateTargetId = "divUserBase" }, new { @class = "btn-link" })
                </div>
            </div>
        }
    </div>
</div>
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
