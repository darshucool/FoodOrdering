@using AlfasiWeb
@using AlfasiWeb.Util
@using Dinota.Security
@using MvcContrib.UI.Pager
@model Dinota.Domain.User.UserBase
@using AlfasiWeb.Helpers
@{
    TempData.Keep(ViewDataKeys.UserTypeEnum);
    string userTitle = null;
    var userTypeEnum = (byte)TempData[ViewDataKeys.UserTypeEnum];
    var isDoFab = Model.IsFabUser;

    switch (userTypeEnum)
    {
        case 1:
            userTitle = "User";
            break;
        case 2:
            userTitle = "Project Manager";
            break;
        case 3:
            userTitle = "Supplier";
            break;
        case 4:
            userTitle = "Fabricator";
            break;
        case 5:
            userTitle = "Transporter";
            break;
        case 6:
            userTitle = "Erector";
            break;
    }
    var attribs = new Dictionary<string, object> { { "class", "input-xlarge" } };

    RolePermission rolePermission = TempData.ContainsKey(ViewDataKeys.DetailPermission)
                                      ? (RolePermission)TempData[ViewDataKeys.DetailPermission]
                                      : new RolePermission(false);
    
}
<div id="group_table" class="login_bk">
    <div class="content-bk">
        <h3 id="form_head">
            @userTitle Details</h3>
        @using (Html.BeginForm())
        {
            <br />
            <div id="detail-handler">
                <div id="new" class="row-fluid">
                    <div class="span4 pull-left">
                        <dl class="dl-horizontal">
                            <dt>@Html.DetailLabelFor(model => model.UserName)</dt>
                            <dd>
                                @Html.DetailFor(model => model.UserName, 80)</dd>
                        </dl>
                    </div>
                </div>
            </div>
            <div id="detail-handler">
                <div id="new" class="row-fluid">
                    <div class="span4 pull-left">
                        <dl class="dl-horizontal">
                            <dt>@Html.DetailLabelFor(model => model.Name)</dt>
                            <dd>
                                @Html.DetailFor(model => model.Name, 80)</dd>
                        </dl>
                    </div>
                </div>
            </div>
            if (userTypeEnum == 3)
            {
            <div id="detail-handler">
                <div id="new" class="row-fluid">
                    <div class="span4 pull-left">
                        <dl class="dl-horizontal">
                            <dt>@Html.DetailLabelFor(model => model.IsFabUser)</dt>
                            <dd>
                                @Html.CheckBoxFor(model => model.IsFabUser,new {@disabled = true})</dd>
                        </dl>
                    </div>
                </div>
            </div>
            }   
            <div id="detail-handler">
                <div id="new" class="row-fluid">
                    <div class="span4 pull-left">
                        <dl class="dl-horizontal">
                            <dt>@Html.DetailLabelFor(model => model.Telephone1)</dt>
                            <dd>
                                @Html.DetailFor(model => model.Telephone1, 80)</dd>
                        </dl>
                    </div>
                </div>
            </div>
            <div id="detail-handler">
                <div id="new" class="row-fluid">
                    <div class="span4 pull-left">
                        <dl class="dl-horizontal">
                            <dt>@Html.DetailLabelFor(model => model.Email)</dt>
                            <dd>
                                @Html.DetailFor(model => model.Email, 80)</dd>
                        </dl>
                    </div>
                </div>
            </div>
            <div class="link_bar">
                @Ajax.ActionLink("Back to List", "LoadUserList", "users", new { typeenum = (byte)TempData[ViewDataKeys.UserTypeEnum] }, new AjaxOptions() { OnFailure = "serverError();", UpdateTargetId = "divUserBase" }, new { @class = "link-btn" })
                @if ((!isDoFab || userTypeEnum != 4) && rolePermission.CanEdit)
                {
                   @Ajax.ActionLink("| Edit", "Edit", "Users", new {id = Model.Id}, new AjaxOptions {OnFailure = "serverError();", UpdateTargetId = "divUserBase"}, new {@class = "link-btn"})
                }
            </div>
        }
    </div>
</div>
