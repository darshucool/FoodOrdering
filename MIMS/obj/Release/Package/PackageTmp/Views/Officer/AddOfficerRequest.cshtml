@using MIMS
@using MIMS.Helpers
@using Dinota.Security
@using Dinota.Domain.MenuItem
@using Dinota.Domain.MenuOption
@using Dinota.Domain.OfficerRequest
@using Dinota.Domain.Event
@using AlfasiWeb.Models
@model OfficerRequest
@{
    ViewBag.Title = "MenuOrderList";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<div class="d-none">
    <div class="bg-primary border-bottom p-3 d-flex align-items-center">
        <a class="toggle togglew toggle-2" href="#"><span></span></a>
        <h4 class="font-weight-bold m-0 text-white">Warning In/Out</h4>
    </div>
</div>
<div class="container position-relative">
    <div class="py-5 osahan-profile row">

        <div class="col-md-12 mb-3">
            <div class="rounded shadow-sm p-4 bg-white">
                <h5 class="mb-4">Warning In/Out</h5>
                <div id="edit_profile">
                    <div>
                        @Html.Message()
                        @using (Html.BeginForm("AddOfficerRequest", "Officer", new { id = Model.UserAccount.Id }, FormMethod.Post, new { @class = "form-horizontal", @enctype = "multipart/form-data" }))
                        {

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="exampleInputName1"></label>
                                    @Model.UserAccount.ServiceNo  &nbsp;
                                    @if (Model.UserAccount.Rank != null)
                                    {
                                        @Model.UserAccount.Rank.Name
                                    }
                                    &nbsp;   @Model.UserAccount.Name
                                </div>
                            </div>
                            <div class="col-md-12"></div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="exampleInputName1">From Date</label>
                                    @Html.TextBoxFor(m => m.FromDate, new { @placeholder = "Date", @data_rule_required = "true", @type = "date", @class = "form-control", @aria_required = "true", @Required = "true" })
                                    @Html.ValidationMessageFor(m => m.FromDate, "")
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="exampleInputName1">From Meal</label>
                                    @Html.DropDownListFor(model => model.FromMeal, (IEnumerable<SelectListItem>)ViewData[MIMS.ViewDataKeys.MenuItemList], "-- Select Meal From  --", new { @class = "full-width form-control", @required = "true" })
                                    @Html.ValidationMessageFor(m => m.FromMeal, null, new { @class = "help-inline" })




                                </div>
                            </div>
                            @*<div class="col-md-6">
                                <div class="form-group">
                                    <label for="exampleInputName1">To Date</label>
                                    @Html.TextBoxFor(m => m.ToDate, new { @placeholder = "Date", @data_rule_required = "true", @type = "date", @class = "form-control", @aria_required = "true", @Required = "true" })
                                    @Html.ValidationMessageFor(m => m.ToDate, "")
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="exampleInputName1">To Meal</label>
                                    @Html.DropDownListFor(model => model.ToMeal, (IEnumerable<SelectListItem>)ViewData[MIMS.ViewDataKeys.MenuItemList], "-- Select Meal To  --", new { @class = "full-width form-control", @required = "true" })
                                    @Html.ValidationMessageFor(m => m.ToMeal, null, new { @class = "help-inline" })




                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="exampleInputName1">Pament Method</label>
                                    @Html.DropDownListFor(model => model.PaymentMethod, (IEnumerable<SelectListItem>)ViewData[MIMS.ViewDataKeys.PaymentMethodList], "-- Select Payment Method  --", new { @class = "full-width form-control", @required = "true" })
                                    @Html.ValidationMessageFor(m => m.PaymentMethod, null, new { @class = "help-inline" })




                                </div>
                            </div>*@
                            <div class="col-md-12"></div>
                            @if (Model.UId == 0)
                            {


                                <div class="text-center">
                                    <button type="submit" class="btn btn-primary btn-block">Submit</button>
                                </div>


                            }
                            else
                            {
                                <div class="form-group">
                                    <label for="exampleInputName1">Active</label>
                                    @Html.CheckBoxFor(m => m.Active)
                                </div>
                                <div class="text-center">
                                    <button type="submit" class="btn btn-primary btn-block">Update</button>
                                </div>
                            }


                        </div>

                            }
                        </div>

                </div>
            </div>
        </div>
    </div>
</div>









