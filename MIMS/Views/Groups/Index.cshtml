@using AlfasiWeb
@using AlfasiWeb.Models
@using Dinota.Security.Group
@using AlfasiWeb.Util
@using AlfasiWeb.Helpers
@using AlfasiWeb.Properties
@using Dinota.Security
@model GroupSearchModel
@{
    ViewBag.Title = "Group";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Scripts.Render("~/bundles/TableSorter")
@Html.GetDeleteDiv()
@*div element for permission popup*@
@Html.GetBootsrapDiv("AssignPermissionPopUp-Element", "AssignPermissionPopUp", "Group Permissions")
<div id="group_table" class="login_bk">
    @Html.Message()
    <div class="content-bk">
        <h3 id="form_head">
            User Groups</h3>
        <br />
        <div>
            @{
                RolePermission rolePermission = ViewData.ContainsKey(ViewDataKeys.Permission)
                                                    ? (RolePermission)ViewData[ViewDataKeys.Permission]
                                                    : new RolePermission(false);

                var groups = (IEnumerable<Dinota.Security.Group.Group>)ViewData[ViewDataKeys.List];
                Html.Custom().Grid(groups, "GrdGroups", true).Sort(Model.GetGridSortOptions())
                    .Columns(column =>
                                 {
                                     column.For(group => group.Name).Attributes(a => new Dictionary<string, object> { { "class", "span9 g_links" } }).Sortable(false).ShowFilter(true);
                                     column.For(group => Ajax.BoostrapedPopUpActionLink("Permissions", "Roles", "Groups", new { id = group.Id }, new AjaxOptions() { UpdateTargetId = "AssignPermissionPopUp-Element", OnSuccess = "javascript:BoostrapView('AssignPermissionPopUp');" }, "Permission")).CellCondition(g => g.Name != Resources.AliasAdminGroup).Attributes(a => new Dictionary<string, object> { { "class", "span1 g_links" } }).Sortable(false);
                                     column.For(group => Html.Partial("_gridLinks", new { id = group.Id })).Encode(false).CellCondition(g => g.Name != Resources.AliasAdminGroup).Attributes(a => new Dictionary<string, object> { { "class", "span2 g_links" } }).Sortable(false);
                                 }).Render();
            }
        </div>
        <div class="link_bar">
            @if (@rolePermission.CanEdit)
            {
                @Html.ActionLink("New Group", "Create", "Groups", null, new { @class = "link-btn" })
            }
        </div>
    </div>
</div>
<script language="javascript" type="text/javascript" src="@Url.Content("~/Scripts/custom/commonscript.js")"> </script>
<script type="text/javascript">

    var dTable = null;

    $(document).ready(function () {

        SetFilterColumnCount(1);

        dTable = $('#GrdGroups').dataTable({
            "aoColumns": [null, { "bSortable": false }, { "bSortable": false}],
            "bPaginate": false,
            "bLengthChange": false,
            "bFilter": false,
            "bSort": true,
            "bInfo": false,
            "bAutoWidth": false,
            "sScrollY": "300px",
            "bScrollCollapse": false,
            "bSortCellsTop": true,
            "bRetrieve": true
        });

        $(window).bind('resize', CustomResize);

    });

    function CustomResize() {
        
        $(window).unbind('resize');
        if (dTable != null) {
            dTable.css({ width: dTable.parent().width() });
            dTable.fnAdjustColumnSizing();
        }
        $(window).bind('resize', CustomResize);
        
    }

</script>
